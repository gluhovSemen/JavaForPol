Важно:  
                
                В среде IDE ( например, Eclipse)  есть возможность ввести параметры из командной строки.
                Обработка ошибок должна быть сделана для всех заданий, если есть ввод параметров. 
                Введенные параметры и результаты работы должны выводиться на дисплей (вместе с соответствующими пояснениями, если это необходимо для понимания решенной задачи ).
                Поток выполнения  имеет имя по умолчанию, которое нужно получить во время выполнения с помощью метода Thread.currentThread.getName().
                3 и 4 задания для потоков выполнения предполагают выполнение потоков четко по очереди.

1.Написать приложение которое вводит 3 целых положительных числа  из командной строки и находит наибольший общий делитель. 
Вывести на дисплей введенные числа и полученный результат.

2. Есть класс Creature c подклассами Snake, Dog  и есть интерфейс Creep c методом creep, а также унаследованный от Creep  подинтерфейс Wriggle c методом wriggle.
 Класс Snake реализует интерфейс Wriggle, а класс Dog - Creep.
  Создать массив объектов Сreep, как представителей классов Snake , Dog, состоящий из количества  элементов, заданных параметром.
 Для всех  этих объектов выполнить все  методы, которые реализованы в соответствующих классах.

3. Создать 2 потока, один из которых записывает любое число  в разделенную между потоками переменную , а другой считывает это число.
 Цикл для обоих потоков выполняется  число раз, заданное параметром.  
Нужно выводить имя работающего потока и - записываемое число   для первого потока или считанное число для второго потока  . Выполнить задание   с использованием конструкции synchronized . 
Не использовать в этом задании флаги для синхронизации потоков, а только методы wait и notify. 
Также не использовать любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром.

4. Создать приложение с 3 потоками для нижеследующей задачи. 3 работника выполняют следующую работу: 1-ый копает яму, 2-ой сажает дерево,  3-ий подвязывает саженец к кольям. Работа идет строго по очереди: пока не подвязан саженец 1 -ый рабочий отдыхает(т.е. поток находится в состоянии ожидания), пока не вскопана яма отдыхает 2 рабочий , и пока не посажено дерево 3 -й работник отдыхает. Число саженцев задается параметром.  
Использовать ограничения из задания 3. 
Выводить на дисплей имя работника и номер саженца.

5. Создать  приложение с пользовательским интерфейсом для заданий 1-4. Для этого приложения должна быть реализована возможность выбора из списка любого приложения и его выполнение. 
Модифицировать задания 1-4 так, чтобы весь вывод происходил в текстовых областях . 
Т. е это должно быть не приложение командной строки , а полностью  графическое приложение. Не используйте в приложении всплывающие окна.

6. Создать приложение для мобильного телефона, строящее график вида y=ax+b, где а и b задаются через интерфейс, в приложении нужно вывести  оси координат с  числовыми подписями.

7. Создать бизнес-приложение или приложение-игру для мобильного телефона . В отчете необходимо 
наличие титульного листа, диаграмм классов, описания предназначения классов и методов, скриншотов и кода приложения в конце. 