Важно:  
                В среде IDE ( например, Eclipse)  есть возможность ввести параметры из командной строки.
                Обработка ошибок должна быть сделана для всех заданий, если есть ввод параметров. 
                Введенные параметры и результаты работы должны выводиться на дисплей (вместе с соответствующими пояснениями, если это необходимо для понимания решенной задачи ).
                Поток выполнения  имеет имя по умолчанию, которое нужно получить во время выполнения с помощью метода Thread.currentThread.getName().
                3 и 4 задания для потоков выполнения предполагают выполнение потоков четко по очереди.

1. В приложении задано параметром количество студентов. Приложение генерирует   фамилии студентов и   месяцы их рождения. Приложение имеет еще 1 параметр- число от 1 до 12 .
 Задачей приложения является вывод всех фамилий студентов, которые родились в месяц, заданный параметром. Необходимо также выводить вначале список всех студентов с датами рождения.

2. Создать интерфейс- "курс валют сегодня" с методами  double buy( int n){} и double sell (int n){}, где методы возвращают количество рублей, необходимое для покупки или вырученное от продажи. Также интерфейс имеет константы : курсы покупки и продажи для 2-4 видов валют.
Создать классы для каждой валюты, реализующие интерфейс. 
Приложение имеет 3 параметра - наименование валюты, продажа или покупка и количество.  
Вывод должен содержать эти параметры и количество рублей, необходимое для покупки или вырученное от продажи. 

3. Есть 2 потока - тренер и спортсмен. тренер ставит задачу перед спортсменом. Когда  спортсмен выполняет задание, тренер ставит следующую задачу и т. д. Число заданий задается параметром
На дисплей выводится номер задания и имя тренера или спортсмена.
Выполнить задание   с использованием конструкции synchronized . 
Не использовать в этом задании флаги для синхронизации потоков, а только методы wait и notify. 
Также не использовать любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром.

4.  Создать приложение с 2 параметрами. 1 параметр задает количество потоков , 2-ой параметр задает целое  положительное число.
Каждый поток по очереди уменьшает число на 1 и выводит  уменьшенное число и свое имя . Работа потоков заканчивается, когда число будет равно 0. 
Использовать ограничения из задания 3. 

5. Создать  приложение с пользовательским интерфейсом для заданий 1-4. Для этого приложения должна быть реализована возможность выбора из списка любого приложения и его выполнение. 
Модифицировать задания 1-4 так, чтобы весь вывод происходил в текстовых областях . 
Т. е это должно быть не приложение командной строки , а полностью  графическое приложение. Не используйте в приложении всплывающие окна.

6. Создать несложное приложение -калькулятор  для мобильного телефона с графическим интерфейсом.

7. Создать бизнес-приложение или приложение-игру для мобильного телефона . Подготовить отчет этого курсового проекта в электронном виде. В отчете необходимо 
наличие титульного листа, диаграмм классов, описания предназначения классов и методов, скриншотов и кода приложения в конце. 
