Важно:  
               
                В среде IDE ( например, Eclipse)  есть возможность ввести параметры из командной строки.
                Обработка ошибок должна быть сделана для всех заданий, если есть ввод параметров. 
                Введенные параметры и результаты работы должны выводиться на дисплей (вместе с соответствующими пояснениями, если это необходимо для понимания решенной задачи ).
                Поток выполнения  имеет имя по умолчанию, которое нужно получить во время выполнения с помощью метода Thread.currentThread.getName().
                3 и 4 задания для потоков выполнения предполагают выполнение потоков четко по очереди.

1. Создать приложение, которое выделит все  неотрицательные числа, которые содержатся в строке , заданной как параметр. Любой нечисловой символ(или набор таких символов) служит разделителем чисел.
Выделенные числа должны быть отсортированы .
 Вывести на дисплей заданную , как параметр , строку , выделенные из нее числа и результат сортировки.

2.  Есть класс Furniture c подклассами Chair, Table  и есть интерфейс Tree c методом tree, а также унаследованный от Tree подинтерфейс Oak c методом oak.
 Класс Furniture реализует интерфейс Tree, а класс Table  - Oak.
  Создать массив объектов Tree, как представителей классов Chair, Table, состоящий из количества  элементов, заданных параметром.
 Для всех  этих объектов выполнить все  методы, которые реализованы в соответствующих классах.Вывод содержит название класса и название методов для каждого объекта.

3. Создать 2 потока Отправитель и Получатель, один из которых отправляет посылку, а другой - ее получает.
 Число посылок  задается параметром.
Отправитель не может послать следующую посылку, пока получатель не получит предыдущую.  
Нужно выводить  имя работающего потока  для Отправителя и Получателя и номер посылки. Выполнить задание   с использованием конструкции synchronized . 
Не использовать в этом задании флаги для синхронизации потоков, а только методы wait и notify. 
Также не использовать любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром.

4.Создать многопотоковое приложение с 1 параметром для нижеследующей задачи.
 Есть следующие потоки: повар ,официантка и посетители, число посетителей задано параметром. Каждого посетителя нужно накормить обедом из 3 блюд. Повар готовит 1 блюдо, официантка  берет его и относит  1-ому посетителю , затем 1ое блюдо снова готовится поваром и относится официанткой следующему по очереди клиенту.Повар не начинает готовить пока очередной клиент не получит свое блюдо. Когда все клиенты  получили 1-е блюдо, повар готовит 2-ое блюдо и оно строго по очереди относится всем клиентам. То же самое происходит с 3-им блюдом.
Выводить номер блюда вместе с именем "повар" или "официантка" или "клиент" с номером клиента в зависимости от того , кто работает в данный момент времени.
Использовать ограничения из задания 3. 

5. Создать  приложение с пользовательским интерфейсом для заданий 1-4. Для этого приложения должна быть реализована возможность выбора из списка любого приложения и его выполнение. 
Модифицировать задания 1-4 так, чтобы весь вывод происходил в текстовых областях . 
Т. е это должно быть не приложение командной строки , а полностью  графическое приложение. Не используйте в приложении всплывающие окна.

6. Создать приложение для мобильного телефона- список группы с возможностью добавления и удаления членов группы , которое демонстрирует работу с постоянной памятью -record store. 

7. Создать бизнес-приложение или приложение-игру для мобильного телефона . В отчете необходимо 
наличие титульного листа, диаграмм классов, описания предназначения классов и методов, скриншотов и кода приложения в конце. 
