Важно:  
                В среде IDE ( например, Eclipse)  есть возможность ввести параметры из командной строки.
                Обработка ошибок должна быть сделана для всех заданий, если есть ввод параметров. 
                Введенные параметры и результаты работы должны выводиться на дисплей (вместе с соответствующими пояснениями, если это необходимо для понимания решенной задачи ).
                Поток выполнения  имеет имя по умолчанию, которое нужно получить во время выполнения с помощью метода Thread.currentThread.getName().
                3 и 4 задания для потоков выполнения предполагают выполнение потоков четко по очереди.

1. В приложении задано параметром количество студентов. Приложение генерирует   фамилии студентов и   месяцы их рождения. Приложение имеет еще 1 параметр- число от 1 до 12 .
 Задачей приложения является вывод всех фамилий студентов, которые родились в месяц, заданный параметром. Необходимо также выводить вначале список всех студентов с датами рождения.

2. Создать приложение с 2 классами- А, B  и 2 интерфейсами I1, I2. 
Класс А является родительским для класса B, Интерфейс I1 является родительским для интерфейса I2.
Класс A реализует интерфейс I1. 
Класс В реализует интерфейс I2. 
Интерфейс I1 содержит метод i1, класс А  содержит метод а1, интерфейс I2 содержит метод i2. Класс B содержит метод b1.
Все методы выводят строку с именем своего класса или интерфейса и именем метода.
 Создать  2 объекта типа  A, B . Выполнить максимальное число методов для каждого объекта. 
Привести объекты к типу I1 и опять выполнить максимальное число методов для этих объектов.

3. Создать 2 потока разными способами. Один из этих потоков создает произвольное целое число от 1 до 9 , записывает это число в разделенную между потоками переменную и выводит свое имя и сгенеренное значение.
Второй поток выводит   свое имя  на дисплей в цикле. Цикл  выполняется число раз, сгенеренное первым потоком. Далее снова работает первый поток .
 Потоки работают попеременно.  Цикл для первого потока выполняется число раз заданное параметром.  Выполнить задание   с использованием конструкции synchronized . 
Не использовать в этом задании флаги для синхронизации потоков, а только методы wait и notify. 
Также не использовать любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром.

4.  Создать приложение с 2 параметрами. 1 параметр задает количество потоков , 2-ой параметр задает целое  положительное число.
Каждый поток по очереди уменьшает число на 1 и выводит  уменьшенное число и свое имя . Работа потоков заканчивается, когда число будет равно 0. 
Использовать ограничения из задания 3. 
Выводить на дисплей результаты работы каждого потока.

5. Создать  приложение с пользовательским интерфейсом для заданий 1-4. Для этого приложения должна быть реализована возможность выбора из списка любого приложения и его выполнение. 
Модифицировать задания 1-4 так, чтобы весь вывод происходил либо в диалоговых окнах  , либо в текстовых областях. 
Т. е это должно быть не приложение командной строки , а полностью  графическое приложение

6. Создать несложное приложение -калькулятор  для мобильного телефона с графическим интерфейсом.

7. Создать бизнес-приложение или приложение-игру для мобильного телефона . Подготовить отчет этого курсового проекта в электронном виде. В отчете необходимо 
наличие титульного листа, диаграмм классов, описания предназначения классов и методов, скриншотов и кода приложения в конце. 
