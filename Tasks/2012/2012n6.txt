1. По номеру, заданному в параметре программы при запуске, вывести на консоль либо название соответствующего месяца, 
а также число дней в этом месяце , либо сообщение об ошибке, неправильно введен или отсутствует параметр.

(Пример: С: \> java Array 4
April has 30 days.)

2.Создать приложение, выполняющее простые арифметические действия над операндами-параметрами командной строки. 
Проверить наличие и количество параметров, а также их соответствие предъявляемым ниже требованиям.
Операндами могут быть как целые числа, так и числа с плавающей точкой.
Параметры задаются в виде :
	Операнд1 Операция Операнд2, где операция - + | - | x | / 
Результат должен быть выдан в виде:
	Сумма| Разность| Произведение| Частное  =   (результат)

3. Создать приложение с 2 классами- Book, Shoe  и  интерфейсом Product. Определить новый интерфейс  Present,
 расширяющий интерфейс Product и содержащий  метод it_can_be_presented(), который может возвращать строку.
Объявить 2 новых класса (например Toy, Picture), реализующих  интерфейс Present.
В приложении создать массив объектов Product-(Book, Shoe,Toy, Picture) , состоящий из 20 элементов.
Перебирая в цикле элементы массива Product, находить  c помощью оператора  instanceof  те объекты, которые реализуют  интерфейс Present.
Для каждого найденного элемента массива Product, реализующего новый интерфейс Present, 
выполнить метод нового интерфейса it_can_be_presented(). 

4. Напишите приложение с 2 потоками- производителем и потребителем, которые имеют разделяемую статическую переменную- склад.
Склад хранит целые числа от 0 до 9.
Производитель генерирует числа от 0 до 9 через 100 миллисекунд и отправляет их на склад, выводя сообщение об этом.
Потребитель читает значения целых чисел со склада, как только они там появились, и выводит сообщение на консоль.
Конструкцию synchronized не использовать в этом задании.

5. Выполнить задание 4, если производитель генерирует числа непрерывно. 
Потребитель синхронизуется с производителем при помощи конструкции synchronized и методов класса Object- wait, notify. 
Не использовать в этом задании флаги для синхронизации потоков, также не использовать любые задержки для  потоков
 после начала их работы в виде методов sleep, yield или wait c параметром. 

6. Выполнить приложение командной строки с двумя параметрами , один из которых – количество потоков, другой параметр – количество выводимых строк.
Нужно так синхронизовать потоки, чтобы имена потоков выводились поочередно- в каждой строке.
Под синхронизацией подразумевается использование конструкции synchronized и методов wait, notify.
Использование флагов для выполнения синхронизации не допускается. 
Также нельзя использовать любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром.
Пример вывода для приложения с параметрами 3 и 2:
Thread-0 Thread-1 Thread-2 
Thread-0 Thread-1 Thread-2 

7. Написать  графическое приложение , имеющее как минимум  Button  , TextArea, а также Layout - BorderLayout.  Приложение позволяет выводить содержимое файла в текстовую область,
изменять содержимое файла и сохранять файл.
Имя файла либо выбирается в окне диалога , либо вводится в текстовое поле.   

8.  Создать несложное приложение -калькулятор  для мобильного телефона с графическим интерфейсом.

9. Создать приложение для мобильного телефона, которое выводит круги в квадратах разных цветов и размеров на каждое нажатие кнопки.

10. Создать приложение-игру для мобильного телефона.