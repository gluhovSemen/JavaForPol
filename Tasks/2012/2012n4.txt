1. Создать приложение с 3 параметрами. Необходимо определить  могут ли быть введенные параметры сторонами треугольника и вывести сообщение  в случае, если это невозможно  , о причине.

2.Написать приложение которое вводит 4 целых положительных числа из командной строки и находит наименьшее общее кратное этих чисел.

3. Создать приложение с 2 классами- А, B  и 2 интерфейсами I1, I2. 
Класс А является родительским для класса B, Интерфейс I1 является родительским для интерфейса I2.
Класс A реализует интерфейс I1. 
Класс В реализует интерфейс I2. 
Интерфейс I1 содержит метод i1, класс А  содержит метод а1, интерфейс I2 содержит метод i2. Класс B содержит метод b1.
Все методы выводят строку с именем своего класса или интерфейса и именем метода.
 Создать минимальное число объектов для выполнения всех указанных 4 методов. 
и выполнить все эти методы.

4. Создать 2 потока разными способами. Один из этих потоков увеличивает разделенную между потоками переменную на 1000, 
а другой на 10 . Потоки работают попеременно.  Цикл для каждого потока выполняется 100 раз.  
Нужно выводить для каждого потока значение измененной переменной. Конструкцию synchronized не использовать в этом задании.

5. Выполнить задание 4  с использованием конструкции synchronized . Не использовать в этом задании флаги для синхронизации потоков, а только методы wait и notify. 
Также не использовать любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром.

6. Создать приложение с 2 параметрами. 1 параметр задает количество потоков в одной группе, 2-ой параметр задает количество потоков во второй группе.
каждый поток из первой группы посылает сигнал любому потоку из второй группы. 
Как только сигнал получен потоком из второй группы, оба потока, посылающий и получающий , засыпают на 1 минуту. После этого поток из первой группы выводит свое имя , а также
 имя потока, получившего сигнал, и заканчивается.
Работа продолжается пока есть хоть один поток в первой группе и если число потоков во второй группе ненулевое( аналогия- прием экзамена, где первая группа-студенты, вторая- преподаватели).  
Не использовать в этом задании флаги для синхронизации потоков, а только методы wait и notify. 
любые задержки для потоков после начала их работы в виде методов sleep, yield или wait c параметром можно использовать только в тот момент, когда сигнал получен потоком из второй группы.

7. Создать приложение с графическим интерфейсом на основе задания 1  . Результат выводить в файл.

8. Создать приложение для мобильного телефона , которое демонстрирует работу представителей 4 классов, расширяющих Screen, List, TextBox, Alert, Form 

9. Создать приложение для мобильного телефона, которое выводит треугольники разного  размера на каждое нажатие кнопки .

10. Создать приложение-игру для мобильного телефона.